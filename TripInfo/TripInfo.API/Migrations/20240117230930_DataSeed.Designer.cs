// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TripInfo.API.DbContexts;

#nullable disable

namespace TripInfo.API.Migrations
{
    [DbContext(typeof(TripInfoContext))]
    [Migration("20240117230930_DataSeed")]
    partial class DataSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TripInfo.API.Entites.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("CustomerPrice")
                        .HasColumnType("float");

                    b.Property<double>("CustomerServiceFee")
                        .HasColumnType("float");

                    b.Property<double>("CustomerTip")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("TripId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerPrice = 22.149999999999999,
                            CustomerServiceFee = 13.630000000000001,
                            CustomerTip = 6.5599999999999996,
                            Description = "Customer 1 Description",
                            TripId = 1
                        },
                        new
                        {
                            Id = 2,
                            CustomerPrice = 12.99,
                            CustomerServiceFee = 3.8700000000000001,
                            CustomerTip = 5.5,
                            Description = "Customer 2 Description",
                            TripId = 2
                        },
                        new
                        {
                            Id = 3,
                            CustomerPrice = 9.3000000000000007,
                            CustomerServiceFee = 4.3799999999999999,
                            CustomerTip = 17.23,
                            Description = "Customer 1 Description",
                            TripId = 3
                        },
                        new
                        {
                            Id = 4,
                            CustomerPrice = 10.49,
                            CustomerServiceFee = 5.3200000000000003,
                            CustomerTip = 22.68,
                            Description = "Customer 2 Description",
                            TripId = 3
                        });
                });

            modelBuilder.Entity("TripInfo.API.Entites.Trip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Boost")
                        .HasColumnType("float");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<double>("Customer10Price")
                        .HasColumnType("float");

                    b.Property<double>("Customer10ServiceFee")
                        .HasColumnType("float");

                    b.Property<double>("Customer10Tip")
                        .HasColumnType("float");

                    b.Property<double>("Customer1Price")
                        .HasColumnType("float");

                    b.Property<double>("Customer1ServiceFee")
                        .HasColumnType("float");

                    b.Property<double>("Customer1Tip")
                        .HasColumnType("float");

                    b.Property<double>("Customer2Price")
                        .HasColumnType("float");

                    b.Property<double>("Customer2ServiceFee")
                        .HasColumnType("float");

                    b.Property<double>("Customer2Tip")
                        .HasColumnType("float");

                    b.Property<double>("Customer3Price")
                        .HasColumnType("float");

                    b.Property<double>("Customer3ServiceFee")
                        .HasColumnType("float");

                    b.Property<double>("Customer3Tip")
                        .HasColumnType("float");

                    b.Property<double>("Customer4Price")
                        .HasColumnType("float");

                    b.Property<double>("Customer4ServiceFee")
                        .HasColumnType("float");

                    b.Property<double>("Customer4Tip")
                        .HasColumnType("float");

                    b.Property<double>("Customer5Price")
                        .HasColumnType("float");

                    b.Property<double>("Customer5ServiceFee")
                        .HasColumnType("float");

                    b.Property<double>("Customer5Tip")
                        .HasColumnType("float");

                    b.Property<double>("Customer6Price")
                        .HasColumnType("float");

                    b.Property<double>("Customer6ServiceFee")
                        .HasColumnType("float");

                    b.Property<double>("Customer6Tip")
                        .HasColumnType("float");

                    b.Property<double>("Customer7Price")
                        .HasColumnType("float");

                    b.Property<double>("Customer7ServiceFee")
                        .HasColumnType("float");

                    b.Property<double>("Customer7Tip")
                        .HasColumnType("float");

                    b.Property<double>("Customer8Price")
                        .HasColumnType("float");

                    b.Property<double>("Customer8ServiceFee")
                        .HasColumnType("float");

                    b.Property<double>("Customer8Tip")
                        .HasColumnType("float");

                    b.Property<double>("Customer9Price")
                        .HasColumnType("float");

                    b.Property<double>("Customer9ServiceFee")
                        .HasColumnType("float");

                    b.Property<double>("Customer9Tip")
                        .HasColumnType("float");

                    b.Property<double>("CustomerPaymentsTotal")
                        .HasColumnType("float");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("Distance")
                        .HasColumnType("float");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<double>("Fare")
                        .HasColumnType("float");

                    b.Property<int>("PointsEarned")
                        .HasColumnType("int");

                    b.Property<double>("Promotion")
                        .HasColumnType("float");

                    b.Property<double>("ServiceFeeTotal")
                        .HasColumnType("float");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StoreName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Tip")
                        .HasColumnType("float");

                    b.Property<double>("YourEarnings")
                        .HasColumnType("float");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Trips");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Pacific Hwy, San Diego, CA 92101-1128, US",
                            Boost = 0.0,
                            City = "San Diego",
                            Country = "US",
                            Customer10Price = 0.0,
                            Customer10ServiceFee = 0.0,
                            Customer10Tip = 0.0,
                            Customer1Price = 22.149999999999999,
                            Customer1ServiceFee = 13.630000000000001,
                            Customer1Tip = 6.5599999999999996,
                            Customer2Price = 0.0,
                            Customer2ServiceFee = 0.0,
                            Customer2Tip = 0.0,
                            Customer3Price = 0.0,
                            Customer3ServiceFee = 0.0,
                            Customer3Tip = 0.0,
                            Customer4Price = 0.0,
                            Customer4ServiceFee = 0.0,
                            Customer4Tip = 0.0,
                            Customer5Price = 0.0,
                            Customer5ServiceFee = 0.0,
                            Customer5Tip = 0.0,
                            Customer6Price = 0.0,
                            Customer6ServiceFee = 0.0,
                            Customer6Tip = 0.0,
                            Customer7Price = 0.0,
                            Customer7ServiceFee = 0.0,
                            Customer7Tip = 0.0,
                            Customer8Price = 0.0,
                            Customer8ServiceFee = 0.0,
                            Customer8Tip = 0.0,
                            Customer9Price = 0.0,
                            Customer9ServiceFee = 0.0,
                            Customer9Tip = 0.0,
                            CustomerPaymentsTotal = 28.710000000000001,
                            DateTime = new DateTime(2023, 7, 3, 11, 23, 0, 0, DateTimeKind.Unspecified),
                            Distance = 12.6,
                            Duration = new TimeSpan(0, 0, 33, 21, 0),
                            Fare = 8.5199999999999996,
                            PointsEarned = 3,
                            Promotion = 0.0,
                            ServiceFeeTotal = 13.630000000000001,
                            State = "CA",
                            StoreName = "Coco Ichibanya Curry House (San Diego) ",
                            Street = "Pacific Hwy",
                            Tip = 6.5599999999999996,
                            YourEarnings = 15.08,
                            Zip = "92101-1128"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Butternut Ln, San Diego, CA 92123, USA",
                            Boost = 1.28,
                            City = "San Diego",
                            Country = "USA",
                            Customer10Price = 0.0,
                            Customer10ServiceFee = 0.0,
                            Customer10Tip = 0.0,
                            Customer1Price = 12.99,
                            Customer1ServiceFee = 3.8700000000000001,
                            Customer1Tip = 5.5,
                            Customer2Price = 0.0,
                            Customer2ServiceFee = 0.0,
                            Customer2Tip = 0.0,
                            Customer3Price = 0.0,
                            Customer3ServiceFee = 0.0,
                            Customer3Tip = 0.0,
                            Customer4Price = 0.0,
                            Customer4ServiceFee = 0.0,
                            Customer4Tip = 0.0,
                            Customer5Price = 0.0,
                            Customer5ServiceFee = 0.0,
                            Customer5Tip = 0.0,
                            Customer6Price = 0.0,
                            Customer6ServiceFee = 0.0,
                            Customer6Tip = 0.0,
                            Customer7Price = 0.0,
                            Customer7ServiceFee = 0.0,
                            Customer7Tip = 0.0,
                            Customer8Price = 0.0,
                            Customer8ServiceFee = 0.0,
                            Customer8Tip = 0.0,
                            Customer9Price = 0.0,
                            Customer9ServiceFee = 0.0,
                            Customer9Tip = 0.0,
                            CustomerPaymentsTotal = 18.489999999999998,
                            DateTime = new DateTime(2023, 7, 3, 20, 27, 0, 0, DateTimeKind.Unspecified),
                            Distance = 7.4000000000000004,
                            Duration = new TimeSpan(0, 0, 21, 11, 0),
                            Fare = 7.8399999999999999,
                            PointsEarned = 6,
                            Promotion = 1.28,
                            ServiceFeeTotal = 3.8700000000000001,
                            State = "CA",
                            StoreName = "Adam's Wine & Spirits ",
                            Street = "Butternut Ln",
                            Tip = 5.5,
                            YourEarnings = 14.619999999999999,
                            Zip = "92123"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Convoy Ct, San Diego, CA 92111, USA",
                            Boost = 0.23999999999999999,
                            City = "San Diego",
                            Country = "USA",
                            Customer10Price = 0.0,
                            Customer10ServiceFee = 0.0,
                            Customer10Tip = 0.0,
                            Customer1Price = 9.3000000000000007,
                            Customer1ServiceFee = 4.3799999999999999,
                            Customer1Tip = 17.23,
                            Customer2Price = 10.49,
                            Customer2ServiceFee = 5.3200000000000003,
                            Customer2Tip = 22.68,
                            Customer3Price = 0.0,
                            Customer3ServiceFee = 0.0,
                            Customer3Tip = 0.0,
                            Customer4Price = 0.0,
                            Customer4ServiceFee = 0.0,
                            Customer4Tip = 0.0,
                            Customer5Price = 0.0,
                            Customer5ServiceFee = 0.0,
                            Customer5Tip = 0.0,
                            Customer6Price = 0.0,
                            Customer6ServiceFee = 0.0,
                            Customer6Tip = 0.0,
                            Customer7Price = 0.0,
                            Customer7ServiceFee = 0.0,
                            Customer7Tip = 0.0,
                            Customer8Price = 0.0,
                            Customer8ServiceFee = 0.0,
                            Customer8Tip = 0.0,
                            Customer9Price = 0.0,
                            Customer9ServiceFee = 0.0,
                            Customer9Tip = 0.0,
                            CustomerPaymentsTotal = 59.700000000000003,
                            DateTime = new DateTime(2023, 7, 7, 11, 25, 0, 0, DateTimeKind.Unspecified),
                            Distance = 9.9000000000000004,
                            Duration = new TimeSpan(0, 0, 48, 49, 0),
                            Fare = 9.8499999999999996,
                            PointsEarned = 6,
                            Promotion = 0.23999999999999999,
                            ServiceFeeTotal = 9.6999999999999993,
                            State = "CA",
                            StoreName = "Mendocino Farms ",
                            Street = "Convoy Ct",
                            Tip = 39.909999999999997,
                            YourEarnings = 50.0,
                            Zip = "92111"
                        });
                });

            modelBuilder.Entity("TripInfo.API.Entites.Customer", b =>
                {
                    b.HasOne("TripInfo.API.Entites.Trip", "Trip")
                        .WithMany("Customer")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("TripInfo.API.Entites.Trip", b =>
                {
                    b.Navigation("Customer");
                });
#pragma warning restore 612, 618
        }
    }
}
